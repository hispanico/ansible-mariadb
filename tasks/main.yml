---
# tasks file for ansible-mariadb

- name: Include release specific variables
  include_vars: "{{ ansible_distribution_release }}.yml"
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name: Install tools
  apt:
    name: "{{item}}"
    state: present
  with_items:
    - python-mysqldb
    - software-properties-common
  tags:
    - packages
    - mariadb

- name: Add MariaDB repository key
  apt_key:
    id: "{{ mariadb_apt_keyid }}"
    keyserver: "hkp://keyserver.ubuntu.com:80"
    state: present
  register:
    repokey
  tags:
    - packages
    - mariadb

- name: Add MariaDB 10.2 stable Repositor
  apt_repository:
    repo: "{{ mariadb_apt_repository }}"
    state: present
    update_cache: yes
  register:
    repostable
  when:
    repokey|success
  tags:
    - packages
    - mariadb

- name: Install mariadb-server
  apt:
    name: mariadb-server
    state: present
  when:
    repostable|success
  tags:
    - packages
    - mariadb

- name: Ensure mariadb started
  service:
    name: mysql
    state: started
    enabled: yes
  tags:
    - service
    - mariadb

- name: Ensure mariadb root password is set
  mysql_user:
    name: root
    password: "{{ mariadb_root_pw }}"
  tags:
    - configure
    - mariadb

- name: Create .my.cnf
  template:
    src: "client.my.cnf.j2"
    dest: "/{{ ansible_env.HOME}}/.my.cnf"
    owner: root
    group: root
    mode: 0600

- name: Ensure anonymous mariadb user is absent
  mysql_user:
    name: ''
    host_all: yes
    state: absent
  tags:
    - configure
    - mariadb

- name: Ensure mariadb test database is absent
  mysql_db:
    name: test
    state: absent
  tags:
    - configure
    - mariadb

- name: Create Databases
  mysql_db:
    name: "{{ item.key }}"
    state: present
  with_dict: "{{ databases }}"
  tags:
    - configure
    - mariadb

- name: Create Users
  mysql_user:
    name: "{{ item.value.db_user_name }}"
    password: "{{ item.value.db_user_passwd }}"
    priv: "{{ item.key }}.*:ALL"
    host: "{{ item.value.db_user_host }}"
    state: present
  with_dict: "{{ databases }}"
  tags:
    - configure
    - maridb
